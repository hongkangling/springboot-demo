spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#连接池配置
#<!-- 配置初始化大小、最小、最大 -->
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-active=20

#<!-- 配置获取连接等待超时的时间 60秒-->
spring.datasource.druid.max-wait=60000
#<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
spring.datasource.druid.time-between-eviction-runs-millis=60000
#<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
spring.datasource.druid.min-evictable-idle-time-millis=60000
#spring.datasource.druid.max-evictable-idle-time-millis=90000

#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.max-open-prepared-statements= -1
#检测连接是否有效的语句，及超时时间
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.validation-query-timeout=30
#申请连接是否检测，归还连接是否检测 ，空闲是否检测
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
#插件配置 监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall

#mybatis 设置
mybatis.type-aliases-package=com.example.demo.model
mybatis.mapper-locations=classpath:/mapper/*.xml

spring.devtools.remote.secret=mysecret

