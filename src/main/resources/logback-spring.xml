<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
    <!--日志输出样式-->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 控制台日志输出格式-->
    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %clr([%level]) %c{15}.%M-%L - %m %xEx%n"/>
              <!--value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->
    <!--日志文件输出格式-->
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%level] %c{15}.%M-%L - %m %xEx%n"/>
              <!--value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } -&#45;&#45; [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->
    <!-- 特定类的输出日志级别-->
    <logger name="org.apache.catalina.startup.DigesterFactory" level="ERROR"/>
    <logger name="org.apache.catalina.util.LifecycleBase" level="ERROR"/>
    <logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN"/>
    <logger name="org.apache.sshd.common.util.SecurityUtils" level="WARN"/>
    <logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN"/>
    <logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="ERROR"/>
    <logger name="org.hibernate.validator.internal.util.Version" level="WARN"/>
    <!-- 日志输出根目录-->
    <property name="ROOT_LOG_DIR" value="/opt/logs/springbootdemo}"/>
    <!-- 归档日志输出根目录-->
    <property name="ROOT_LOGBAK_DIR" value="/opt/logs/logbaks/springbootdemo}"/>
    <!-- 所有日志输出文件名-->
    <property name="ALL_LOG_FILE_NAME" value="springbootdemo_all_log}"/>
    <!-- 错误日志输出-->
    <property name="ERROR_LOG_FILE_NAME" value="springbootdemo_all_error_log}"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${ROOT_LOG_DIR}/${ALL_LOG_FILE_NAME}.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>TRACE</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${ROOT_LOGBAK_DIR}/%d{yyyy-MM-dd}/${ALL_LOG_FILE_NAME}-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 100天的日志周期，最大不能超过1000GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <maxHistory>100GB</maxHistory>
        </rollingPolicy>
    </appender>
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${ROOT_LOG_DIR}/${ERROR_LOG_FILE_NAME}.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${ROOT_LOGBAK_DIR}/%d{yyyy-MM-dd}/${ERROR_LOG_FILE_NAME}-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 100天的日志周期，最大不能超过1000GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <maxHistory>100GB</maxHistory>
        </rollingPolicy>
    </appender>
    <!-- druid 数据库连接池日志输出-->
    <appender name="druidSqlRollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender" >
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] %-5level %L %M - %msg%xEx%n</pattern>
        </encoder>
        <file>${ROOT_LOG_DIR}/druid-sql.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>TRACE</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${ROOT_LOGBAK_DIR}/%d{yyyy-MM-dd}/api-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 100天的日志周期，最大不能超过1000GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <maxHistory>100GB</maxHistory>
        </rollingPolicy>
    </appender>
    <!-- 异步日志输出-->
    <appender name="FILE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1000</queueSize>
        <appender-ref ref="FILE"></appender-ref>
    </appender>
    <appender name="ERROR_FILE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1000</queueSize>
        <appender-ref ref="ERROR_FILE"></appender-ref>
    </appender>

    <!--记录druid-sql的记录-->
    <logger name="druid.sql.Statement" level="debug" additivity="false">
        <appender-ref ref="druidSqlRollingFile"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE_ASYNC"/>
        <appender-ref ref="ERROR_FILE_ASYNC"/>
    </root>
</configuration>